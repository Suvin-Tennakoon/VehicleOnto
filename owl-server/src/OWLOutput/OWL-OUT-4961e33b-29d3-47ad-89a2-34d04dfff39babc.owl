Prefix(:=<http://example.com/ontology#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://example.com/ontology>

Declaration(Class(:CS_Degree))
Declaration(Class(:Degree))
Declaration(Class(:Graduate))
Declaration(Class(:IS_Degree))
Declaration(Class(:Innocent_Student))
Declaration(Class(:Lecture))
Declaration(Class(:Organization))
Declaration(Class(:Primary_School))
Declaration(Class(:SE_Degree))
Declaration(Class(:School))
Declaration(Class(:Student))
Declaration(Class(:Toxic_Female_Student))
Declaration(Class(:Toxic_Male_Student))
Declaration(Class(:Toxic_Student))
Declaration(Class(:University))
Declaration(ObjectProperty(:studiesIn))
Declaration(DataProperty(:Degree_name))
Declaration(DataProperty(:ID))
Declaration(DataProperty(:Innocent_Level))
Declaration(DataProperty(:Lecture_name))
Declaration(DataProperty(:Student_name))
Declaration(DataProperty(:Toxic_Level))
Declaration(DataProperty(:category))
Declaration(DataProperty(:name))
Declaration(DataProperty(:year))

############################
#   Object Properties
############################

# Object Property: :studiesIn (:studiesIn)

FunctionalObjectProperty(:studiesIn)
ObjectPropertyDomain(:studiesIn :Student)
ObjectPropertyRange(:studiesIn :School)


############################
#   Data Properties
############################

# Data Property: :Degree_name (:Degree_name)

FunctionalDataProperty(:Degree_name)
DataPropertyDomain(:Degree_name :Degree)
DataPropertyRange(:Degree_name xsd:string)

# Data Property: :ID (:ID)

FunctionalDataProperty(:ID)
DataPropertyDomain(:ID :Degree)
DataPropertyDomain(:ID :Lecture)
DataPropertyDomain(:ID :Student)
DataPropertyRange(:ID xsd:int)

# Data Property: :Innocent_Level (:Innocent_Level)

FunctionalDataProperty(:Innocent_Level)
DataPropertyDomain(:Innocent_Level :Innocent_Student)
DataPropertyRange(:Innocent_Level xsd:int)

# Data Property: :Lecture_name (:Lecture_name)

FunctionalDataProperty(:Lecture_name)
DataPropertyDomain(:Lecture_name :Lecture)
DataPropertyRange(:Lecture_name xsd:string)

# Data Property: :Student_name (:Student_name)

FunctionalDataProperty(:Student_name)
DataPropertyDomain(:Student_name :Student)
DataPropertyRange(:Student_name xsd:string)

# Data Property: :Toxic_Level (:Toxic_Level)

FunctionalDataProperty(:Toxic_Level)
DataPropertyDomain(:Toxic_Level :Toxic_Student)
DataPropertyRange(:Toxic_Level xsd:int)

# Data Property: :category (:category)

FunctionalDataProperty(:category)
DataPropertyDomain(:category :School)
DataPropertyRange(:category xsd:string)

# Data Property: :name (:name)

FunctionalDataProperty(:name)
DataPropertyDomain(:name :Organization)
DataPropertyRange(:name xsd:string)

# Data Property: :year (:year)

DataPropertyDomain(:year :Organization)
DataPropertyRange(:year xsd:int)



############################
#   Classes
############################

# Class: :CS_Degree (:CS_Degree)

AnnotationAssertion(rdfs:comment :CS_Degree "The Level : 1"^^xsd:string)
SubClassOf(:CS_Degree :Degree)

# Class: :Degree (:Degree)

AnnotationAssertion(rdfs:comment :Degree "The Level : 0"^^xsd:string)

# Class: :IS_Degree (:IS_Degree)

AnnotationAssertion(rdfs:comment :IS_Degree "The Level : 1"^^xsd:string)
SubClassOf(:IS_Degree :Degree)

# Class: :Innocent_Student (:Innocent_Student)

AnnotationAssertion(rdfs:comment :Innocent_Student "The Level : 1"^^xsd:string)
SubClassOf(:Innocent_Student :Student)

# Class: :Lecture (:Lecture)

AnnotationAssertion(rdfs:comment :Lecture "The Level : 0"^^xsd:string)

# Class: :Organization (:Organization)

AnnotationAssertion(rdfs:comment :Organization "The Level : 0"^^xsd:string)

# Class: :Primary_School (:Primary_School)

AnnotationAssertion(rdfs:comment :Primary_School "The Level : 2"^^xsd:string)
SubClassOf(:Primary_School :School)

# Class: :SE_Degree (:SE_Degree)

AnnotationAssertion(rdfs:comment :SE_Degree "The Level : 1"^^xsd:string)
SubClassOf(:SE_Degree :Degree)

# Class: :School (:School)

AnnotationAssertion(rdfs:comment :School "The Level : 1"^^xsd:string)
SubClassOf(:School :Organization)
DisjointClasses(:School :University)

# Class: :Student (:Student)

AnnotationAssertion(rdfs:comment :Student "The Level : 0"^^xsd:string)

# Class: :Toxic_Female_Student (:Toxic_Female_Student)

AnnotationAssertion(rdfs:comment :Toxic_Female_Student "The Level : 2"^^xsd:string)
SubClassOf(:Toxic_Female_Student :Toxic_Student)
DisjointClasses(:Toxic_Female_Student :Toxic_Male_Student)

# Class: :Toxic_Male_Student (:Toxic_Male_Student)

AnnotationAssertion(rdfs:comment :Toxic_Male_Student "The Level : 2"^^xsd:string)
SubClassOf(:Toxic_Male_Student :Toxic_Student)

# Class: :Toxic_Student (:Toxic_Student)

AnnotationAssertion(rdfs:comment :Toxic_Student "The Level : 1"^^xsd:string)
SubClassOf(:Toxic_Student :Student)

# Class: :University (:University)

AnnotationAssertion(rdfs:comment :University "The Level : 1"^^xsd:string)
SubClassOf(:University :Organization)


DisjointClasses(:CS_Degree :IS_Degree :SE_Degree)
)